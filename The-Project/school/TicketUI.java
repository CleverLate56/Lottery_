/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package School;

import javax.swing.*;
import java.util.*;
import java.io.*;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.time.LocalDateTime;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//import net.proteanit.sql.DbUtils;


/**
 *
 * @author sibab
 * 
 */

public class TicketUI extends javax.swing.JFrame {
    
    
    
    public class TransferPlayer extends Details  
    {
        String name;
        String surname;
        int age;
        String userID;
        
        
       
       
       

        public TransferPlayer() {
           
            this.name = playerDetails.getName();
            this.surname = playerDetails.getSurname();
            this.age = playerDetails.getAge();
            this.userID = playerDetails.getUserID();
        }

        public String getName() {
            return name;
        }

        public String getSurname() {
            return surname;
        }

        public int getAge() {
            return age;
        }

        public String getUserID() {
            return userID;
        }
   
    }  
        
        

        
        
        
    
    
   
    /**
     * Creates new form TicketUI
     */
    public TicketUI() {
        initComponents();
      
    }
    
    
    
    
    
 
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTicket11 = new javax.swing.JTextField();
        txtTicket12 = new javax.swing.JTextField();
        txtTicket13 = new javax.swing.JTextField();
        txtTicket14 = new javax.swing.JTextField();
        txtTicket15 = new javax.swing.JTextField();
        txtTicket16 = new javax.swing.JTextField();
        txtTicket21 = new javax.swing.JTextField();
        txtTicket22 = new javax.swing.JTextField();
        txtTicket23 = new javax.swing.JTextField();
        txtTicket24 = new javax.swing.JTextField();
        txtTicket25 = new javax.swing.JTextField();
        txtTicket26 = new javax.swing.JTextField();
        txtTicket31 = new javax.swing.JTextField();
        txtTicket32 = new javax.swing.JTextField();
        txtTicket33 = new javax.swing.JTextField();
        txtTicket34 = new javax.swing.JTextField();
        txtTicket35 = new javax.swing.JTextField();
        txtTicket36 = new javax.swing.JTextField();
        txtTicket41 = new javax.swing.JTextField();
        txtTicket42 = new javax.swing.JTextField();
        txtTicket43 = new javax.swing.JTextField();
        txtTicket44 = new javax.swing.JTextField();
        txtTicket45 = new javax.swing.JTextField();
        txtTicket46 = new javax.swing.JTextField();
        txtTicket51 = new javax.swing.JTextField();
        txtTicket52 = new javax.swing.JTextField();
        txtTicket53 = new javax.swing.JTextField();
        txtTicket54 = new javax.swing.JTextField();
        txtTicket55 = new javax.swing.JTextField();
        txtTicket56 = new javax.swing.JTextField();
        txtTicket61 = new javax.swing.JTextField();
        txtTicket62 = new javax.swing.JTextField();
        txtTicket63 = new javax.swing.JTextField();
        txtTicket64 = new javax.swing.JTextField();
        txtTicket65 = new javax.swing.JTextField();
        txtTicket66 = new javax.swing.JTextField();
        txtTicket71 = new javax.swing.JTextField();
        txtTicket72 = new javax.swing.JTextField();
        txtTicket73 = new javax.swing.JTextField();
        txtTicket74 = new javax.swing.JTextField();
        txtTicket75 = new javax.swing.JTextField();
        txtTicket76 = new javax.swing.JTextField();
        txtTicket81 = new javax.swing.JTextField();
        txtTicket82 = new javax.swing.JTextField();
        txtTicket83 = new javax.swing.JTextField();
        txtTicket84 = new javax.swing.JTextField();
        txtTicket85 = new javax.swing.JTextField();
        txtTicket86 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblMainError = new javax.swing.JLabel();
        lblMainError2 = new javax.swing.JLabel();
        lblTicket1Error = new javax.swing.JLabel();
        lblTicket2Error = new javax.swing.JLabel();
        lblTicket3Error = new javax.swing.JLabel();
        lblTicket4Error = new javax.swing.JLabel();
        lblTicket5Error = new javax.swing.JLabel();
        lblTicket6Error = new javax.swing.JLabel();
        lblTicket7Error = new javax.swing.JLabel();
        lblTicket8Error = new javax.swing.JLabel();

        jLabel14.setText("jLabel14");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tickets ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Tickets ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Ticket No.1 ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Ticket No.2 ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Ticket No.3 ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Ticket No.4 ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Ticket No.5 ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Ticket No.6 ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Ticket No.7 ");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Ticket No.8 ");

        txtTicket11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicket11ActionPerformed(evt);
            }
        });

        txtTicket12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicket12ActionPerformed(evt);
            }
        });

        txtTicket13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicket13ActionPerformed(evt);
            }
        });

        txtTicket14.setPreferredSize(new java.awt.Dimension(50, 22));

        txtTicket15.setPreferredSize(new java.awt.Dimension(50, 22));

        txtTicket16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicket16ActionPerformed(evt);
            }
        });

        txtTicket62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicket62ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Enter ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblMainError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMainError.setForeground(new java.awt.Color(255, 0, 0));

        lblMainError2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMainError2.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket1Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket2Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket3Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket4Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket5Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket6Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket7Error.setForeground(new java.awt.Color(255, 0, 0));

        lblTicket8Error.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTicket11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket21, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket31, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket41, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket51, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket61, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket71, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket81, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTicket12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket22, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket32, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket42, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket52, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket62, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket72, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket82, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTicket13, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket23, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket33, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket43, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket53, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket63, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket73, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtTicket83, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTicket14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTicket15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTicket16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTicket1Error, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtTicket84, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket74, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket64, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket44, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket24, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTicket54, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTicket25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTicket35, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket45, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket55, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket65, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket75, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(txtTicket85, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTicket46, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(txtTicket36, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTicket66, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(txtTicket56, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(txtTicket76, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(txtTicket86, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTicket3Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTicket4Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTicket5Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTicket6Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTicket7Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTicket8Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTicket26, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblTicket2Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMainError, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                    .addComponent(lblMainError2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(lblMainError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMainError2)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTicket11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTicket15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket1Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTicket21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket2Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTicket31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket3Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTicket41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket4Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTicket51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket5Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTicket61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket6Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTicket71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket7Error))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTicket81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTicket86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTicket8Error))
                .addGap(54, 54, 54)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void txtTicket11ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtTicket12ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtTicket13ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtTicket16ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtTicket62ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        boolean pass = true; 
        
      
            int item11 = 0;
            int item12 = 0;
            int item13 = 0;
            int item14 = 0;
            int item15 = 0;
            int item16 = 0;
            int item21 = 0;
            int item22 = 0;
            int item23 = 0;
            int item24 = 0;
            int item25 = 0;
            int item26 = 0;
            int item31 = 0;
            int item32 = 0;
            int item33 = 0;
            int item34 = 0;
            int item35 = 0;
            int item36 = 0;
            int item41 = 0;
            int item42 = 0;
            int item43 = 0;
            int item44 = 0;
            int item45 = 0;
            int item46 = 0;
            int item51 = 0;
            int item52 = 0;
            int item53 = 0;
            int item54 = 0;
            int item55 = 0;
            int item56 = 0;
            int item61 = 0;
            int item62 = 0;
            int item63 = 0;
            int item64 = 0;
            int item65 = 0;
            int item66 = 0;
            int item71 = 0;
            int item72 = 0;
            int item73 = 0;
            int item74 = 0;
            int item75 = 0;
            int item76 = 0;
            int item81 = 0;
            int item82 = 0;
            int item83 = 0;
            int item84 = 0;
            int item85 = 0;
            int item86 = 0; 
            int empty = 0;
            Ticket [] allTickets = new Ticket[1000];
            int [] ticketID = new int[1000]; 
            int [] checkpos = new int[8]; 
            Boolean OutOfRange = false; 
            
            
            
           
            
      try 
      {
          
          
          if(txtTicket11.getText().equals("") && txtTicket12.getText().equals("") && txtTicket13.getText().equals("") &&
             txtTicket14.getText().equals("") && txtTicket15.getText().equals("") && txtTicket16.getText().equals(""))
          {
                item11 = 0;
                item12 = 0;
                item13 = 0;
                item14 = 0;
                item15 = 0;
                item16 = 0; 
                empty = empty + 1; 
                checkpos[0] = 1;
                
          } 
          else 
          {
 
          
          item11 = Integer.parseInt(txtTicket11.getText().trim());
          item12 = Integer.parseInt(txtTicket12.getText().trim());
          item13 = Integer.parseInt(txtTicket13.getText().trim());
          item14 = Integer.parseInt(txtTicket14.getText().trim());
          item15 = Integer.parseInt(txtTicket15.getText().trim());
          item16 = Integer.parseInt(txtTicket16.getText().trim());
          
          int [] items = {item11,item12,item13,item14,item15,item16};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket11.setText("");
                      txtTicket12.setText("");
                      txtTicket13.setText("");
                      txtTicket14.setText("");
                      txtTicket15.setText("");
                      txtTicket16.setText("");
                      pass = false;
                      
                  }
          }
         } 
          if(checkDouble != false )   
          {
             
               
          if(item11 < 0 || item11 > 52)
          {
              txtTicket11.setText("");
              lblTicket1Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item12 < 0 || item12 > 52)
          {
              txtTicket12.setText("");
              lblTicket1Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false; 
              OutOfRange = true;
          }
          
           if(item13 < 0 || item13 > 52)
          {
              txtTicket13.setText("");
              lblTicket1Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item14 < 0 || item14 > 52)
          {
              txtTicket14.setText("");
              lblTicket1Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item15 < 0 || item15 > 52)
          {
              txtTicket15.setText("");
              lblTicket1Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item16 < 0 || item16 > 52)
          {
              txtTicket11.setText("");
              lblTicket1Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
         
          }
      }
      } catch(NumberFormatException e )
      {
           lblTicket1Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket11.setText("");
           txtTicket12.setText("");
           txtTicket13.setText("");
           txtTicket14.setText("");
           txtTicket15.setText("");
           txtTicket16.setText("");
           pass = false;
          
      }
            
      try 
      {
          
          
          if(txtTicket21.getText().equals("") && txtTicket22.getText().equals("") && txtTicket23.getText().equals("") &&
             txtTicket24.getText().equals("") && txtTicket25.getText().equals("") && txtTicket26.getText().equals(""))
          {
                item21 = 0;
                item22 = 0;
                item23 = 0;
                item24 = 0;
                item25 = 0;
                item26 = 0;
                empty = empty + 1; 
               checkpos[1] = 1;
                
          } 
          else 
          {
 
          
          item21 = Integer.parseInt(txtTicket21.getText().trim());
          item22 = Integer.parseInt(txtTicket22.getText().trim());
          item23 = Integer.parseInt(txtTicket23.getText().trim());
          item24 = Integer.parseInt(txtTicket24.getText().trim());
          item25 = Integer.parseInt(txtTicket25.getText().trim());
          item26 = Integer.parseInt(txtTicket26.getText().trim());
          
          int [] items = {item21,item22,item23,item24,item25,item26};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket21.setText("");
                      txtTicket22.setText("");
                      txtTicket23.setText("");
                      txtTicket24.setText("");
                      txtTicket25.setText("");
                      txtTicket26.setText("");
                      pass = false;
                      
                  }
               }
          }
          
              
          if(checkDouble != false)
          {
          
          if(item21 < 0 || item21 > 52)
          {
              txtTicket21.setText("");
              lblTicket2Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item22 < 0 || item22 > 52)
          {
              txtTicket22.setText("");
              lblTicket2Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
           if(item23 < 0 || item23 > 52)
          {
              txtTicket23.setText("");
              lblTicket2Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item24 < 0 || item24 > 52)
          {
              txtTicket24.setText("");
              lblTicket2Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item25 < 0 || item25 > 52)
          {
              txtTicket25.setText("");
              lblTicket2Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item26 < 0 || item26 > 52)
          {
              txtTicket26.setText("");
              lblTicket2Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          } 
         
      }
      }
      
      catch(NumberFormatException e )
      {
           lblTicket2Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket21.setText("");
           txtTicket22.setText("");
           txtTicket23.setText("");
           txtTicket24.setText("");
           txtTicket25.setText("");
           txtTicket26.setText("");
           pass = false;
          
      }
      
      try 
      {
          
          
          if(txtTicket31.getText().equals("") && txtTicket32.getText().equals("") && txtTicket33.getText().equals("") &&
             txtTicket34.getText().equals("") && txtTicket35.getText().equals("") && txtTicket36.getText().equals(""))
          {
                item31 = 0;
                item32 = 0;
                item33 = 0;
                item34 = 0;
                item35 = 0;
                item36 = 0; 
                empty = empty + 1; 
                checkpos[2] = 1;
                
          } 
          else 
          {
 
          
          item31 = Integer.parseInt(txtTicket31.getText().trim());
          item32 = Integer.parseInt(txtTicket32.getText().trim());
          item33 = Integer.parseInt(txtTicket33.getText().trim());
          item34 = Integer.parseInt(txtTicket34.getText().trim());
          item35 = Integer.parseInt(txtTicket35.getText().trim());
          item36 = Integer.parseInt(txtTicket36.getText().trim());
          
          int [] items = {item31,item32,item33,item34,item35,item36};
          
          boolean checkDouble = false; 
           
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket31.setText("");
                      txtTicket32.setText("");
                      txtTicket33.setText("");
                      txtTicket34.setText("");
                      txtTicket35.setText("");
                      txtTicket36.setText("");
                      pass = false;
                      
                  }
          }
              
           
              
       if(checkDouble != false)
       {  
          if(item31 < 0 || item31 > 52)
          {
              txtTicket31.setText("");
              lblTicket3Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item32 < 0 || item32 > 52)
          {
              txtTicket32.setText("");
              lblTicket3Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false; 
              OutOfRange = true;
          }
          
           if(item33 < 0 || item33 > 52)
          {
              txtTicket33.setText("");
              lblTicket3Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item34 < 0 || item34 > 52)
          {
              txtTicket34.setText("");
              lblTicket3Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item35 < 0 || item35 > 52)
          {
              txtTicket35.setText("");
              lblTicket3Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item36 < 0 || item36 > 52)
          {
              txtTicket36.setText("");
              lblTicket3Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
       }
       
          } 
         
      }
      }
      catch(NumberFormatException e )
      {
           lblTicket3Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket31.setText("");
           txtTicket32.setText("");
           txtTicket33.setText("");
           txtTicket34.setText("");
           txtTicket35.setText("");
           txtTicket36.setText("");
           pass = false;
          
      }
            
            
  try 
      {
          
          
          if(txtTicket41.getText().equals("") && txtTicket42.getText().equals("") && txtTicket43.getText().equals("") &&
             txtTicket44.getText().equals("") && txtTicket45.getText().equals("") && txtTicket46.getText().equals(""))
          {
                item41 = 0;
                item42 = 0;
                item43 = 0;
                item44 = 0;
                item45 = 0;
                item46 = 0; 
                empty = empty + 1; 
                checkpos[3] = 1;
                
          } 
          else 
          {
 
          
          item41 = Integer.parseInt(txtTicket41.getText().trim());
          item42 = Integer.parseInt(txtTicket42.getText().trim());
          item43 = Integer.parseInt(txtTicket43.getText().trim());
          item44 = Integer.parseInt(txtTicket44.getText().trim());
          item45 = Integer.parseInt(txtTicket45.getText().trim());
          item46 = Integer.parseInt(txtTicket46.getText().trim());
          
          int [] items = {item41,item42,item43,item44,item45,item46};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket41.setText("");
                      txtTicket42.setText("");
                      txtTicket43.setText("");
                      txtTicket44.setText("");
                      txtTicket45.setText("");
                      txtTicket46.setText("");
                      pass = false;
                      
                  }
          }
              
          if(checkDouble == false)
          {
          
          if(item41 < 0 || item41 > 52)
          {
              txtTicket41.setText("");
              lblTicket4Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item42 < 0 || item42 > 52)
          {
              txtTicket42.setText("");
              lblTicket4Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false; 
              OutOfRange = true;
          }
          
           if(item43 < 0 || item43 > 52)
          {
              txtTicket43.setText("");
              lblTicket4Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item44 < 0 || item44 > 52)
          {
              txtTicket44.setText("");
              lblTicket4Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item45 < 0 || item45 > 52)
          {
              txtTicket45.setText("");
              lblTicket4Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item46 < 0 || item46 > 52)
          {
              txtTicket46.setText("");
              lblTicket4Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          }
          
          } 
         
      }
      }
      catch(NumberFormatException e )
      {
           lblTicket4Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket41.setText("");
           txtTicket42.setText("");
           txtTicket43.setText("");
           txtTicket44.setText("");
           txtTicket45.setText("");
           txtTicket46.setText("");
           pass = false;
          
      }
            
            
            
   try 
      {
          
          
          if(txtTicket51.getText().equals("") && txtTicket52.getText().equals("") && txtTicket53.getText().equals("") &&
             txtTicket54.getText().equals("") && txtTicket55.getText().equals("") && txtTicket56.getText().equals(""))
          {
                item51 = 0;
                item52 = 0;
                item53 = 0;
                item54 = 0;
                item55 = 0;
                item56 = 0; 
                empty = empty + 1; 
               checkpos[4] = 1;
                
          } 
          else 
          {
 
          
          item51 = Integer.parseInt(txtTicket51.getText().trim());
          item52 = Integer.parseInt(txtTicket52.getText().trim());
          item53 = Integer.parseInt(txtTicket53.getText().trim());
          item54 = Integer.parseInt(txtTicket54.getText().trim());
          item55 = Integer.parseInt(txtTicket55.getText().trim());
          item56 = Integer.parseInt(txtTicket56.getText().trim());
          
          int [] items = {item51,item52,item53,item54,item55,item56};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket51.setText("");
                      txtTicket52.setText("");
                      txtTicket53.setText("");
                      txtTicket54.setText("");
                      txtTicket55.setText("");
                      txtTicket56.setText("");
                      pass = false;
                      
                  }
          }
              
          if(checkDouble == false)
          {
          
          if(item51 < 0 || item51 > 52)
          {
              txtTicket51.setText("");
              lblTicket5Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item52 < 0 || item52 > 52)
          {
              txtTicket52.setText("");
              lblTicket5Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false; 
              OutOfRange = true;
          }
          
           if(item53 < 0 || item53 > 52)
          {
              txtTicket53.setText("");
              lblTicket5Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item54 < 0 || item54 > 52)
          {
              txtTicket54.setText("");
              lblTicket5Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item55 < 0 || item55 > 52)
          {
              txtTicket55.setText("");
              lblTicket5Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item56 < 0 || item56 > 52)
          {
              txtTicket56.setText("");
              lblTicket5Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          }
          } 
         
      }
      }
      catch(NumberFormatException e )
      {
           lblTicket5Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket51.setText("");
           txtTicket52.setText("");
           txtTicket53.setText("");
           txtTicket54.setText("");
           txtTicket55.setText("");
           txtTicket56.setText("");
           pass = false;
          
      }
            
                 
  try 
      {
          
          
          if(txtTicket61.getText().equals("") && txtTicket62.getText().equals("") && txtTicket63.getText().equals("") &&
             txtTicket64.getText().equals("") && txtTicket65.getText().equals("") && txtTicket66.getText().equals(""))
          {
                item61 = 0;
                item62 = 0;
                item63 = 0;
                item64 = 0;
                item65 = 0;
                item66 = 0; 
                empty = empty + 1; 
                checkpos[5] = 1;
                
          } 
          else 
          {
 
          
          item61 = Integer.parseInt(txtTicket61.getText().trim());
          item62 = Integer.parseInt(txtTicket62.getText().trim());
          item63 = Integer.parseInt(txtTicket33.getText().trim());
          item64 = Integer.parseInt(txtTicket34.getText().trim());
          item65 = Integer.parseInt(txtTicket35.getText().trim());
          item66 = Integer.parseInt(txtTicket36.getText().trim());
          
          int [] items = {item61,item62,item63,item64,item65,item66};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket61.setText("");
                      txtTicket62.setText("");
                      txtTicket63.setText("");
                      txtTicket64.setText("");
                      txtTicket65.setText("");
                      txtTicket66.setText("");
                      pass = false;
                      
                  }
          }
              
          if(checkDouble == false)    
          {
          if(item61 < 0 || item61 > 52)
          {
              txtTicket61.setText("");
              lblTicket6Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item62 < 0 || item62 > 52)
          {
              txtTicket62.setText("");
              lblTicket6Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false; 
              OutOfRange = true;
          }
          
           if(item63 < 0 || item63 > 52)
          {
              txtTicket63.setText("");
              lblTicket6Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item64 < 0 || item64 > 52)
          {
              txtTicket64.setText("");
              lblTicket6Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item65 < 0 || item65 > 52)
          {
              txtTicket65.setText("");
              lblTicket6Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item66 < 0 || item66 > 52)
          {
              txtTicket66.setText("");
              lblTicket6Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          }
          } 
         
      }
      }
      catch(NumberFormatException e )
      {
           lblTicket6Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket61.setText("");
           txtTicket62.setText("");
           txtTicket63.setText("");
           txtTicket64.setText("");
           txtTicket65.setText("");
           txtTicket66.setText("");
           pass = false;
          
      }
            
                   
  try 
      {
          
          
          if(txtTicket71.getText().equals("") && txtTicket72.getText().equals("") && txtTicket73.getText().equals("") &&
             txtTicket74.getText().equals("") && txtTicket75.getText().equals("") && txtTicket76.getText().equals(""))
          {
                item71 = 0;
                item72 = 0;
                item73 = 0;
                item74 = 0;
                item75 = 0;
                item76 = 0; 
                empty = empty + 1; 
                checkpos[6] = 1;
                
          } 
          else 
          {
 
          
          item71 = Integer.parseInt(txtTicket71.getText().trim());
          item72 = Integer.parseInt(txtTicket72.getText().trim());
          item73 = Integer.parseInt(txtTicket73.getText().trim());
          item74 = Integer.parseInt(txtTicket74.getText().trim());
          item75 = Integer.parseInt(txtTicket75.getText().trim());
          item76 = Integer.parseInt(txtTicket76.getText().trim());
          
          int [] items = {item71,item72,item73,item74,item75,item76};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket71.setText("");
                      txtTicket72.setText("");
                      txtTicket73.setText("");
                      txtTicket74.setText("");
                      txtTicket75.setText("");
                      txtTicket76.setText("");
                      pass = false;
                      
                  }
          }
              
        if(checkDouble == false)      
        {
          
          if(item71 < 0 || item71 > 52)
          {
              txtTicket71.setText("");
              lblTicket7Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item72 < 0 || item72 > 52)
          {
              txtTicket72.setText("");
              lblTicket7Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
           if(item73 < 0 || item73 > 52)
          {
              txtTicket73.setText("");
              lblTicket7Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item74 < 0 || item74 > 52)
          {
              txtTicket74.setText("");
              lblTicket7Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item75 < 0 || item75 > 52)
          {
              txtTicket75.setText("");
              lblTicket7Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item76 < 0 || item76 > 52)
          {
              txtTicket76.setText("");
              lblTicket7Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
        }
          } 
         
      }
      }
      catch(NumberFormatException e )
      {
           lblTicket7Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket71.setText("");
           txtTicket72.setText("");
           txtTicket73.setText("");
           txtTicket74.setText("");
           txtTicket75.setText("");
           txtTicket76.setText("");
           pass = false;
          
      }
            
   try 
      {
          
          
          if(txtTicket81.getText().equals("") && txtTicket82.getText().equals("") && txtTicket83.getText().equals("") &&
             txtTicket84.getText().equals("") && txtTicket85.getText().equals("") && txtTicket86.getText().equals(""))
          {
                item81 = 0;
                item82 = 0;
                item83 = 0;
                item84 = 0;
                item85 = 0;
                item86 = 0; 
                empty = empty + 1; 
                checkpos[7] = 1;
                
          } 
          else 
          {
 
          
          item81 = Integer.parseInt(txtTicket81.getText().trim());
          item82 = Integer.parseInt(txtTicket82.getText().trim());
          item83 = Integer.parseInt(txtTicket83.getText().trim());
          item84 = Integer.parseInt(txtTicket84.getText().trim());
          item85 = Integer.parseInt(txtTicket85.getText().trim());
          item86 = Integer.parseInt(txtTicket86.getText().trim());
          
          int [] items = {item81,item82,item83,item84,item85,item86};
          
          boolean checkDouble = false; 
          
          for(int i = 0; i < 4; i++)
          {
              for(int j = i + 1; j < 5; j++)
              {
                  if(items[i] == items[j + 1])
                  {
                      checkDouble = true;
                      txtTicket81.setText("");
                      txtTicket82.setText("");
                      txtTicket83.setText("");
                      txtTicket84.setText("");
                      txtTicket85.setText("");
                      txtTicket86.setText("");
                      pass = false;
                      
                      
                  }
          }
              
          if(checkDouble == false)
          {
          
          if(item81 < 0 || item81 > 52)
          {
              txtTicket81.setText("");
              lblTicket8Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          
          if(item82 < 0 || item82 > 52)
          {
              txtTicket82.setText("");
              lblTicket8Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false; 
              OutOfRange = true;
          }
          
           if(item83 < 0 || item83 > 52)
          {
              txtTicket83.setText("");
              lblTicket8Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item84 < 0 || item84 > 52)
          {
              txtTicket84.setText("");
              lblTicket8Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item85 < 0 || item85 >  52)
          {
              txtTicket85.setText("");
              lblTicket8Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          
          if(item86 < 0 || item86 > 52)
          {
              txtTicket86.setText("");
              lblTicket8Error.setText("Out of Bounds");
              lblMainError.setText("Please Enter A Number Between 1 and 52");
              pass = false;
              OutOfRange = true;
          }
          }
          } 
         
      }
      }
      catch(NumberFormatException e )
      {
           lblTicket1Error.setText("Invalid Input");
           lblMainError2.setText("Please Enter Digits Only");
           txtTicket81.setText("");
           txtTicket82.setText("");
           txtTicket83.setText("");
           txtTicket84.setText("");
           txtTicket85.setText("");
           txtTicket86.setText("");
           pass = false;
          
      }
   
    if(empty == 8)
    {
        lblMainError.setText("A minimum of one Ticket needs to be filled. ");
    }
            
            
     if(OutOfRange == false)
     {
      Ticket Ticket1 = new Ticket(item11, item12, item13, item14, item15, item16); 
      Ticket Ticket2 = new Ticket(item21, item22, item23, item24, item25, item26); 
      Ticket Ticket3 = new Ticket(item31, item32, item33, item34, item35, item36); 
      Ticket Ticket4 = new Ticket(item41, item42, item43, item44, item45, item46);
      Ticket Ticket5 = new Ticket(item51, item52, item53, item54, item55, item56);
      Ticket Ticket6 = new Ticket(item61, item62, item63, item64, item65, item66);
      Ticket Ticket7 = new Ticket(item71, item72, item73, item74, item75, item76);
      Ticket Ticket8 = new Ticket(item81, item82, item83, item84, item85, item86);
      
      
      Ticket [] tickets = new Ticket[8];
      
      tickets[0] = Ticket1;
      tickets[1] = Ticket2;        
      tickets[2] = Ticket3;
      tickets[3] = Ticket4;
      tickets[4] = Ticket5;
      tickets[5] = Ticket6;
      tickets[6] = Ticket7;
      tickets[7] = Ticket8;
      
      for(int i = 0; i < 8; i++)
      {
         
       if(checkpos[i] != 0 )
       {
          
     
      try 
      {
          
       Connection con = null;
       PreparedStatement pst = null;
       ResultSet rs = null;
      
       Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
       con = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\sibab\\Downloads\\Lotterydb.accdb");
       
       TransferPlayer player = new TransferPlayer();
       
       String sql = "Select * from Userdb where UserID = '" + player.getUserID()  + "' ";
       pst = con.prepareStatement(sql);
       rs = pst.executeQuery();
                 if(rs.next())
                 {
                     
                     try 
                     {
                         Connection con2 = null; 
                         PreparedStatement pst2 = null; 
                         ResultSet rs2 = null; 
                         
                          Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                          con2 = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\sibab\\Downloads\\Lotterydb.accdb");
                          
                           LocalDateTime currentDateTime = LocalDateTime.now();
        
                            int year = currentDateTime.getYear();
                            int month = currentDateTime.getMonthValue();
                            int day = currentDateTime.getDayOfMonth();
       
                           String intoDate = "#" + year + "-" + month + "-" + day + "#";
                         
                           
                           
                           int intofirst = tickets[i].getFirstSelection();
                           int intoSec = tickets[i].getSecondSelection();
                           int intoThird = tickets[i].getThirdSelection();
                           int intoFourth = tickets[i].getFourthSelection();
                           int intoFifth = tickets[i].getFifthSelection();
                           int intoSixth = tickets[i].getSixthSelection();
                           
                           String intoUserID = player.getUserID();
                           
                           
                           
                           String sql2 = "Insert into Ticketsdb " + "(UserID, FirstNum , SecondNum , thirdNum , fourthNum , fifthNum , sixthNum , SubmissionDate)" + 
                                        "values(" + intoUserID + ", "+ intofirst + ", " + intoSec + " ,"+ intoThird + " ," + intoFourth  + " ," + intoFifth + " , " + 
                                   intoSixth + " , " + intoDate +   ");";
                           
                           pst2 = con2.prepareStatement(sql2);
                           
                           int a = pst2.executeUpdate();
                           
                           if(a > 0)
                           {
                              JOptionPane.showMessageDialog(null, "Ticket entered successfully");
                           }
                         
                     }catch(Exception ex)
                     {
                         System.out.println(ex);
                     }
                             
                     
                 }
                 
          
      
     }catch(Exception ex)
             {
                 System.out.println(ex);
             }
       }      
      }
     
       if(pass == true)
       {
        
        new Results().setVisible(true);
        
       }
       
     }
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblMainError;
    private javax.swing.JLabel lblMainError2;
    private javax.swing.JLabel lblTicket1Error;
    private javax.swing.JLabel lblTicket2Error;
    private javax.swing.JLabel lblTicket3Error;
    private javax.swing.JLabel lblTicket4Error;
    private javax.swing.JLabel lblTicket5Error;
    private javax.swing.JLabel lblTicket6Error;
    private javax.swing.JLabel lblTicket7Error;
    private javax.swing.JLabel lblTicket8Error;
    private javax.swing.JTextField txtTicket11;
    private javax.swing.JTextField txtTicket12;
    private javax.swing.JTextField txtTicket13;
    private javax.swing.JTextField txtTicket14;
    private javax.swing.JTextField txtTicket15;
    private javax.swing.JTextField txtTicket16;
    private javax.swing.JTextField txtTicket21;
    private javax.swing.JTextField txtTicket22;
    private javax.swing.JTextField txtTicket23;
    private javax.swing.JTextField txtTicket24;
    private javax.swing.JTextField txtTicket25;
    private javax.swing.JTextField txtTicket26;
    private javax.swing.JTextField txtTicket31;
    private javax.swing.JTextField txtTicket32;
    private javax.swing.JTextField txtTicket33;
    private javax.swing.JTextField txtTicket34;
    private javax.swing.JTextField txtTicket35;
    private javax.swing.JTextField txtTicket36;
    private javax.swing.JTextField txtTicket41;
    private javax.swing.JTextField txtTicket42;
    private javax.swing.JTextField txtTicket43;
    private javax.swing.JTextField txtTicket44;
    private javax.swing.JTextField txtTicket45;
    private javax.swing.JTextField txtTicket46;
    private javax.swing.JTextField txtTicket51;
    private javax.swing.JTextField txtTicket52;
    private javax.swing.JTextField txtTicket53;
    private javax.swing.JTextField txtTicket54;
    private javax.swing.JTextField txtTicket55;
    private javax.swing.JTextField txtTicket56;
    private javax.swing.JTextField txtTicket61;
    private javax.swing.JTextField txtTicket62;
    private javax.swing.JTextField txtTicket63;
    private javax.swing.JTextField txtTicket64;
    private javax.swing.JTextField txtTicket65;
    private javax.swing.JTextField txtTicket66;
    private javax.swing.JTextField txtTicket71;
    private javax.swing.JTextField txtTicket72;
    private javax.swing.JTextField txtTicket73;
    private javax.swing.JTextField txtTicket74;
    private javax.swing.JTextField txtTicket75;
    private javax.swing.JTextField txtTicket76;
    private javax.swing.JTextField txtTicket81;
    private javax.swing.JTextField txtTicket82;
    private javax.swing.JTextField txtTicket83;
    private javax.swing.JTextField txtTicket84;
    private javax.swing.JTextField txtTicket85;
    private javax.swing.JTextField txtTicket86;
    // End of variables declaration                   
}
